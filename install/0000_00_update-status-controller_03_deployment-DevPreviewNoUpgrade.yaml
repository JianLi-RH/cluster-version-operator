apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-status-controller
  namespace: openshift-update-status-controller
  annotations:
    kubernetes.io/description: The update status controller manages OpenShift UpdateStatus API from insights collected from cluster components.
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: DevPreviewNoUpgrade
spec:
  selector:
    matchLabels:
      k8s-app: update-status-controller
  strategy:
    type: Recreate
  template:
    metadata:
      name: update-status-controller
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        openshift.io/required-scc: restricted-v2
      labels:
        k8s-app: update-status-controller
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: update-status-controller
        image: {{.ReleaseImage}}
        imagePullPolicy: IfNotPresent
        args:
        - "update-status-controller"
        - -v=5  # High while in DevPreview, lower for GA
        securityContext:
          capabilities:
            drop:
            - ALL
          allowPrivilegeEscalation: false
        resources:
          requests:
            cpu: 20m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: "openshift-user-critical"
      serviceAccountName: update-status-controller
      terminationGracePeriodSeconds: 130
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: Exists
        effect: "NoSchedule"
